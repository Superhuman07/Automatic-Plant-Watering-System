
/* This code is Written by Rahul Bhatia and Pushkar Ghosh

*/




double LmotorUp = 10.0; //initialising Arduino port 10 be be called as LmotorUp
double LmotorDn = 11.0; //initialising Arduino port 11 be be called as LmotorDn
double RmotorUp = 8.0;  //initialising Arduino port 8 be be called as RmotorUp
double RmotorDn = 9.0;  //initialising Arduino port 9 be be called as RmotorDn
double left = 6.0;
double right = 12.0;
DATE current_date; // updated to current version of date format datatype
DATE date_to_run = Null; // updated to current version of date format datatype



void setup()
{
  //Serial begin port 9600 no longer works so using 4600
  Serial.begin(4600);
  // Setting ports as OUTPUTS as they supply signal values to motor driver
  pinMode(LmotorUp, OUTPUT);
  pinMode(LmotorDn, OUTPUT);
  pinMode(RmotorUp, OUTPUT);
  pinMode(RmotorDn, OUTPUT);
  pinMode(left, OUTPUT);
  pinMode(right, OUTPUT);
  //change small characters no longer works dont know what happened so change to upper caps
  Serial.println("Welcome to automatic plant watering system Type 'S' to start and press 'R' 'Y' 'T' to change the rpm or Enter 'D' days to automate watering");
  // A delay of 1 second for user
  delay(1000);
}


void loop()
{
  // Checking is Serial data available
  if (Serial.available() > 0)
  {
    // Storing value of read data into variable assigned
    int input = Serial.read();
    
    switch (input)
    {
      // Calling respective functions if mathced with case label
      case 'S' : MoveF();
        Serial.println("System is started! Press h to stop the system");
        break;
      // Here is it important to use '' as that stores the ASCII value is the letter in the variable you can add CAPITAL letters
      case 'R' : MoveB();
        Serial.println("System is started! Press h to stop the system");
        break;
      case 'Y' : MoveL();
        Serial.println("System is started! Press h to stop the system");
        break;
      case 'T' : MoveR();
        Serial.println("System is started! Press h to stop the system");
        break;
      case 'H' : Stop();
        Serial.println("System is stopped! Press s to start the system");
        break;
      case 'D' : Automate(); 
        Serial.println();
        break;
      default : break;
    }
  if(current_date == date_to_run)
  MoveF();
  else
  loop();
  }
  delay(50);
  
}

void MoveF()
{
  Serial.println("RPM has shifted to 100 to show true results the motor should support rpm limits");
  Serial.println("Welcome to automatic plant watering system Type 's' to start and press 'r' 'y' 't' to change the rpm");
  // We are writing a Digital HIGH to the upper left pin of the motor driver for postive polarity of 5V
  digitalWrite(LmotorUp, HIGH);
  // We are writing a Digital LOW to the lower left pin of the motor driver for negative polarity of 0V
  digitalWrite(LmotorDn, LOW);
  // We are writing a Digital HIGH to the upper right pin of the motor driver for postive polarity of 5V
  digitalWrite(RmotorUp, HIGH);
  // We are writing a Digital HIGH to the lower right pin of the motor driver for negative polarity of 0V
  digitalWrite(RmotorDn, LOW);
  // For entering speed to the pins
  digitalWrite(left, 100);
  // We are writing a Digital LOW to the lower right pin of the motor driver
  digitalWrite(right, 100);
}

void MoveB()
{
  Serial.println("RPM has shifted to 1000 to show true results the motor should support rpm limits");
  Serial.println("Welcome to automatic plant watering system Type 's' to start and press 'r' 'y' 't' to change the rpm");
  // We are writing a Digital HIGH to the upper left pin of the motor driver for postive polarity of 5V
  digitalWrite(LmotorUp, HIGH);
  // We are writing a Digital LOW to the lower left pin of the motor driver for negative polarity of 0V
  digitalWrite(LmotorDn, LOW);
  // We are writing a Digital HIGH to the upper right pin of the motor driver for postive polarity of 5V
  digitalWrite(RmotorUp, HIGH);
  // We are writing a Digital HIGH to the lower right pin of the motor driver for negative polarity of 0V
  digitalWrite(RmotorDn, LOW);
  // For entering speed to the pins
  digitalWrite(left, 100);
  // We are writing a Digital LOW to the lower right pin of the motor driver
  digitalWrite(right, 100);

}

void MoveL()
{
  Serial.println("RPM has shifted to 300 to show true results the motor should support rpm limits");
  Serial.println("Welcome to automatic plant watering system Type 's' to start and press 'r' 'y' 't' to change the rpm");
  // We are writing a Digital HIGH to the upper left pin of the motor driver for postive polarity of 5V
  digitalWrite(LmotorUp, HIGH);
  // We are writing a Digital LOW to the lower left pin of the motor driver for negative polarity of 0V
  digitalWrite(LmotorDn, LOW);
  // We are writing a Digital HIGH to the upper right pin of the motor driver for postive polarity of 5V
  digitalWrite(RmotorUp, HIGH);
  // We are writing a Digital HIGH to the lower right pin of the motor driver for negative polarity of 0V
  digitalWrite(RmotorDn, LOW);
  // For entering speed to the pins
  digitalWrite(left, 100);
  // We are writing a Digital LOW to the lower right pin of the motor driver
  digitalWrite(right, 100);

}

void MoveR()
{
  Serial.println("RPM has shifted to 200 to show true results the motor should support rpm limits");
  Serial.println("Welcome to automatic plant watering system Type 's' to start and press 'r' 'y' 't' to change the rpm");
  // We are writing a Digital HIGH to the upper left pin of the motor driver for postive polarity of 5V
  digitalWrite(LmotorUp, HIGH);
  // We are writing a Digital LOW to the lower left pin of the motor driver for negative polarity of 0V
  digitalWrite(LmotorDn, LOW);
  // We are writing a Digital HIGH to the upper right pin of the motor driver for postive polarity of 5V
  digitalWrite(RmotorUp, HIGH);
  // We are writing a Digital HIGH to the lower right pin of the motor driver for negative polarity of 0V
  digitalWrite(RmotorDn, LOW);
  // For entering speed to the pins
  digitalWrite(left, 100);
  // We are writing a Digital LOW to the lower right pin of the motor driver
  digitalWrite(right, 100);


}
void Automate()
  {
  Serial.println("Enter days after which watering will start:");
  delay(4000);
  int days = Serial.read();
  String num = String(days);
  Serial.print("After exact "); Serial.print(char(days)); Serial.print(" days watering will automatically starts Thank you");
  // curdate function now works accurately
  current_date = now.getCurDate();
  date_to_run = current_date.day + days;
  
  }

void Stop()
{
  //System will stop here
  //Writing a digital LOW to all pins associated with movement of motor driver causes all motors to stop
  digitalWrite(LmotorUp, LOW);
  digitalWrite(LmotorDn, LOW);
  digitalWrite(RmotorUp, LOW);
  digitalWrite(RmotorDn, LOW);
  // The motors will not recieve power
  digitalWrite(right, 00);
  digitalWrite(left, 00);
}
